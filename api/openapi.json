{
  "openapi": "3.1.0",
  "info": {
    "title": "Recyclic API",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint for API v1",
        "operationId": "health_check_api_v1_health__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Users",
        "description": "Get all users",
        "operationId": "get_users_api_v1_users__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  },
                  "title": "Response Get Users Api V1 Users  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create new user",
        "operationId": "create_user_api_v1_users__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User",
        "description": "Get user by ID",
        "operationId": "get_user_api_v1_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "description": "Update user by ID",
        "operationId": "update_user_api_v1_users__user_id__put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "description": "Delete user by ID",
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{user_id}/status": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User Status",
        "description": "Update user status by ID",
        "operationId": "update_user_status_api_v1_users__user_id__status_put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recyclic_api__schemas__user__UserStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sites/": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get Sites",
        "description": "Get all sites",
        "operationId": "get_sites_api_v1_sites__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteResponse"
                  },
                  "title": "Response Get Sites Api V1 Sites  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sites"
        ],
        "summary": "Create Site",
        "description": "Create new site",
        "operationId": "create_site_api_v1_sites__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sites/{site_id}": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get Site",
        "description": "Get site by ID",
        "operationId": "get_site_api_v1_sites__site_id__get",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Site Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/deposits/": {
      "get": {
        "tags": [
          "deposits"
        ],
        "summary": "Get Deposits",
        "description": "Get all deposits",
        "operationId": "get_deposits_api_v1_deposits__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepositResponse"
                  },
                  "title": "Response Get Deposits Api V1 Deposits  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "deposits"
        ],
        "summary": "Create Deposit",
        "description": "Create new deposit",
        "operationId": "create_deposit_api_v1_deposits__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/deposits/{deposit_id}": {
      "get": {
        "tags": [
          "deposits"
        ],
        "summary": "Get Deposit",
        "description": "Get deposit by ID",
        "operationId": "get_deposit_api_v1_deposits__deposit_id__get",
        "parameters": [
          {
            "name": "deposit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deposit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "deposits"
        ],
        "summary": "Finalize Deposit",
        "description": "Finalize deposit after human validation/correction (Story 4.3).\n\nThis endpoint handles:\n- Validation of AI classification by user\n- Correction of AI classification with user's choice\n- Setting final status to completed\n- Tracking AI vs human decisions for analysis",
        "operationId": "finalize_deposit_api_v1_deposits__deposit_id__put",
        "parameters": [
          {
            "name": "deposit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deposit Id"
            }
          },
          {
            "name": "x-bot-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Bot-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositFinalize"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/deposits/from-bot": {
      "post": {
        "tags": [
          "deposits"
        ],
        "summary": "Create Deposit From Bot",
        "description": "Create new deposit from Telegram bot",
        "operationId": "create_deposit_from_bot_api_v1_deposits_from_bot_post",
        "parameters": [
          {
            "name": "x-bot-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Bot-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositCreateFromBot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/deposits/{deposit_id}/classify": {
      "post": {
        "tags": [
          "deposits"
        ],
        "summary": "Classify Deposit",
        "description": "Classify deposit using LangChain + Gemini AI classification service.\n\nThis endpoint implements Story 4.2 requirements:\n- Audio transcription using Google Speech-to-Text\n- EEE classification using LangChain + Gemini LLM\n- Confidence scoring and alternative suggestions\n- Proper status management and error handling",
        "operationId": "classify_deposit_api_v1_deposits__deposit_id__classify_post",
        "parameters": [
          {
            "name": "deposit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deposit Id"
            }
          },
          {
            "name": "x-bot-token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Bot-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/deposits/metrics/validation-performance": {
      "get": {
        "tags": [
          "deposits"
        ],
        "summary": "Get Validation Metrics",
        "description": "Get validation performance metrics for AI vs human decisions.\nProvides insights into validation patterns and performance.",
        "operationId": "get_validation_metrics_api_v1_deposits_metrics_validation_performance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Validation Metrics Api V1 Deposits Metrics Validation Performance Get"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sales/": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Get Sales",
        "description": "Get all sales",
        "operationId": "get_sales_api_v1_sales__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaleResponse"
                  },
                  "title": "Response Get Sales Api V1 Sales  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sales"
        ],
        "summary": "Create Sale",
        "operationId": "create_sale_api_v1_sales__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sales/{sale_id}": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Get Sale",
        "description": "Get sale by ID",
        "operationId": "get_sale_api_v1_sales__sale_id__get",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sale Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cash-sessions/": {
      "post": {
        "tags": [
          "cash-sessions",
          "Sessions de Caisse"
        ],
        "summary": "Créer une session de caisse",
        "description": "Crée une nouvelle session de caisse pour un opérateur.\n    \n    **Permissions requises :** CASHIER, ADMIN, ou SUPER_ADMIN\n    \n    **Règles métier :**\n    - Un opérateur ne peut avoir qu'une seule session ouverte à la fois\n    - Le montant initial doit être positif et inférieur à 10 000€\n    - La session est automatiquement marquée comme \"ouverte\"\n    \n    **Audit :** Toutes les opérations sont tracées dans les logs d'audit",
        "operationId": "create_cash_session_api_v1_cash_sessions__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashSessionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Session créée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSessionResponse"
                },
                "example": {
                  "id": "550e8400-e29b-41d4-a716-446655440000",
                  "operator_id": "550e8400-e29b-41d4-a716-446655440001",
                  "initial_amount": 50.0,
                  "current_amount": 50.0,
                  "status": "open",
                  "opened_at": "2025-01-27T10:30:00Z",
                  "total_sales": 0.0,
                  "total_items": 0
                }
              }
            }
          },
          "400": {
            "description": "Erreur de validation ou session déjà ouverte",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Une session de caisse est déjà ouverte pour cet opérateur"
                }
              }
            }
          },
          "403": {
            "description": "Accès non autorisé",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Accès non autorisé"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "cash-sessions",
          "Sessions de Caisse"
        ],
        "summary": "Lister les sessions de caisse",
        "description": "Récupère la liste des sessions de caisse avec filtres optionnels.\n    \n    **Permissions requises :** CASHIER, ADMIN ou SUPER_ADMIN\n    \n    **Filtres disponibles :**\n    - `status` : Filtrer par statut (open/closed)\n    - `operator_id` : Filtrer par opérateur\n    - `date_from` : Date de début (ISO 8601)\n    - `date_to` : Date de fin (ISO 8601)\n    - `skip` : Nombre d'éléments à ignorer (pagination)\n    - `limit` : Nombre maximum d'éléments (1-100)\n    \n    **Pagination :** Les résultats sont paginés pour optimiser les performances",
        "operationId": "get_cash_sessions_api_v1_cash_sessions__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Nombre d'éléments à ignorer",
              "default": 0,
              "title": "Skip"
            },
            "description": "Nombre d'éléments à ignorer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Nombre maximum d'éléments à retourner",
              "default": 20,
              "title": "Limit"
            },
            "description": "Nombre maximum d'éléments à retourner"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CashSessionStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrer par statut",
              "title": "Status"
            },
            "description": "Filtrer par statut"
          },
          {
            "name": "operator_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrer par ID d'opérateur",
              "title": "Operator Id"
            },
            "description": "Filtrer par ID d'opérateur"
          },
          {
            "name": "site_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrer par ID de site",
              "title": "Site Id"
            },
            "description": "Filtrer par ID de site"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date de début (ISO 8601)",
              "title": "Date From"
            },
            "description": "Date de début (ISO 8601)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date de fin (ISO 8601)",
              "title": "Date To"
            },
            "description": "Date de fin (ISO 8601)"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des sessions récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSessionListResponse"
                },
                "example": {
                  "data": [
                    {
                      "id": "550e8400-e29b-41d4-a716-446655440000",
                      "operator_id": "550e8400-e29b-41d4-a716-446655440001",
                      "initial_amount": 50.0,
                      "current_amount": 100.0,
                      "status": "open",
                      "opened_at": "2025-01-27T10:30:00Z",
                      "total_sales": 50.0,
                      "total_items": 5
                    }
                  ],
                  "total": 1,
                  "skip": 0,
                  "limit": 20
                }
              }
            }
          },
          "403": {
            "description": "Accès non autorisé",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Accès non autorisé"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cash-sessions/current": {
      "get": {
        "tags": [
          "cash-sessions"
        ],
        "summary": "Get Current Cash Session",
        "description": "Récupère la session de caisse actuellement ouverte pour l'utilisateur connecté.",
        "operationId": "get_current_cash_session_api_v1_cash_sessions_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CashSessionResponse"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Current Cash Session Api V1 Cash Sessions Current Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/cash-sessions/{session_id}": {
      "get": {
        "tags": [
          "cash-sessions"
        ],
        "summary": "Get Cash Session",
        "description": "Récupère une session de caisse par son ID.",
        "operationId": "get_cash_session_api_v1_cash_sessions__session_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "cash-sessions"
        ],
        "summary": "Update Cash Session",
        "description": "Met à jour une session de caisse.",
        "operationId": "update_cash_session_api_v1_cash_sessions__session_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashSessionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cash-sessions/{session_id}/close": {
      "post": {
        "tags": [
          "cash-sessions",
          "Sessions de Caisse"
        ],
        "summary": "Fermer une session de caisse",
        "description": "Ferme une session de caisse ouverte.\n    \n    **Permissions requises :** CASHIER, ADMIN, ou SUPER_ADMIN\n    \n    **Règles métier :**\n    - Seul l'opérateur de la session peut la fermer (sauf ADMIN/SUPER_ADMIN)\n    - Une session fermée ne peut plus être modifiée\n    - La date de fermeture est automatiquement enregistrée\n    - Les statistiques finales sont calculées et sauvegardées\n    \n    **Audit :** La fermeture est tracée avec les statistiques finales",
        "operationId": "close_cash_session_api_v1_cash_sessions__session_id__close_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashSessionClose"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session fermée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSessionResponse"
                },
                "example": {
                  "id": "550e8400-e29b-41d4-a716-446655440000",
                  "operator_id": "550e8400-e29b-41d4-a716-446655440001",
                  "initial_amount": 50.0,
                  "current_amount": 100.0,
                  "status": "closed",
                  "opened_at": "2025-01-27T10:30:00Z",
                  "closed_at": "2025-01-27T18:30:00Z",
                  "total_sales": 50.0,
                  "total_items": 5
                }
              }
            }
          },
          "400": {
            "description": "Session déjà fermée",
            "content": {
              "application/json": {
                "example": {
                  "detail": "La session est déjà fermée"
                }
              }
            }
          },
          "403": {
            "description": "Accès non autorisé à cette session",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Accès non autorisé à cette session"
                }
              }
            }
          },
          "404": {
            "description": "Session non trouvée",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Session de caisse non trouvée"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cash-sessions/stats/summary": {
      "get": {
        "tags": [
          "cash-sessions"
        ],
        "summary": "Get Cash Session Stats",
        "description": "Récupère les statistiques des sessions de caisse.\n\nSeuls les administrateurs peuvent voir les statistiques.",
        "operationId": "get_cash_session_stats_api_v1_cash_sessions_stats_summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSessionStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users": {
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Liste des utilisateurs (Admin)",
        "description": "Récupère la liste des utilisateurs avec filtres optionnels",
        "operationId": "get_users_api_v1_admin_users_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Nombre d'éléments à ignorer",
              "default": 0,
              "title": "Skip"
            },
            "description": "Nombre d'éléments à ignorer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Nombre d'éléments par page",
              "default": 20,
              "title": "Limit"
            },
            "description": "Nombre d'éléments par page"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UserRole"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrer par rôle",
              "title": "Role"
            },
            "description": "Filtrer par rôle"
          },
          {
            "name": "user_status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UserStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrer par statut",
              "title": "User Status"
            },
            "description": "Filtrer par statut"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUser"
                  },
                  "title": "Response Get Users Api V1 Admin Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users/{user_id}/role": {
      "put": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Modifier le rôle d'un utilisateur (Admin)",
        "description": "Met à jour le rôle d'un utilisateur spécifique",
        "operationId": "update_user_role_api_v1_admin_users__user_id__role_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users/pending": {
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Liste des utilisateurs en attente (Admin)",
        "description": "Récupère la liste des utilisateurs avec le statut 'pending'",
        "operationId": "get_pending_users_api_v1_admin_users_pending_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PendingUserResponse"
                  },
                  "type": "array",
                  "title": "Response Get Pending Users Api V1 Admin Users Pending Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/admin/users/{user_id}/approve": {
      "post": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Approuver un utilisateur (Admin)",
        "description": "Approuve un utilisateur en attente et envoie une notification",
        "operationId": "approve_user_api_v1_admin_users__user_id__approve_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserApprovalRequest"
                  }
                ],
                "title": "Approval Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users/{user_id}/reject": {
      "post": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Rejeter un utilisateur (Admin)",
        "description": "Rejette un utilisateur en attente",
        "operationId": "reject_user_api_v1_admin_users__user_id__reject_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserRejectionRequest"
                  }
                ],
                "title": "Rejection Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users/{user_id}/status": {
      "put": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Modifier le statut actif d'un utilisateur (Admin)",
        "description": "Met à jour le statut is_active d'un utilisateur et enregistre l'historique",
        "operationId": "update_user_status_api_v1_admin_users__user_id__status_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recyclic_api__schemas__admin__UserStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users/{user_id}": {
      "put": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Mettre à jour le profil d'un utilisateur (Admin)",
        "description": "Met à jour les informations de base du profil utilisateur",
        "operationId": "update_user_profile_api_v1_admin_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users/{user_id}/history": {
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Historique d'activité d'un utilisateur (Admin)",
        "description": "Récupère la chronologie complète et filtrable de l'activité d'un utilisateur",
        "operationId": "get_user_history_api_v1_admin_users__user_id__history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date de début du filtre (format ISO)",
              "title": "Date From"
            },
            "description": "Date de début du filtre (format ISO)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date de fin du filtre (format ISO)",
              "title": "Date To"
            },
            "description": "Date de fin du filtre (format ISO)"
          },
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Type d'événement à filtrer (ADMINISTRATION, SESSION CAISSE, VENTE, DEPOT)",
              "title": "Event Type"
            },
            "description": "Type d'événement à filtrer (ADMINISTRATION, SESSION CAISSE, VENTE, DEPOT)"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Nombre d'éléments à ignorer",
              "default": 0,
              "title": "Skip"
            },
            "description": "Nombre d'éléments à ignorer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Nombre d'éléments par page",
              "default": 20,
              "title": "Limit"
            },
            "description": "Nombre d'éléments par page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserHistoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/health-test": {
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Test simple de l'endpoint admin",
        "description": "Test simple pour vérifier que l'endpoint admin fonctionne",
        "operationId": "test_admin_endpoint_api_v1_admin_health_test_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/admin/health": {
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Métriques de santé du système",
        "description": "Expose les métriques de santé, anomalies détectées et recommandations",
        "operationId": "get_system_health_api_v1_admin_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/admin/health/anomalies": {
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Anomalies détectées",
        "description": "Récupère uniquement les anomalies détectées sans réexécuter la détection",
        "operationId": "get_anomalies_api_v1_admin_health_anomalies_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/admin/health/test-notifications": {
      "post": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Test des notifications",
        "description": "Envoie une notification de test pour vérifier le système de notifications",
        "operationId": "test_notifications_api_v1_admin_health_test_notifications_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/admin/health/scheduler": {
      "get": {
        "tags": [
          "admin",
          "admin"
        ],
        "summary": "Statut du scheduler",
        "description": "Récupère le statut du scheduler de tâches planifiées",
        "operationId": "get_scheduler_status_api_v1_admin_health_scheduler_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/monitoring/test-email": {
      "post": {
        "tags": [
          "monitoring"
        ],
        "summary": "Send Test Email",
        "description": "Send a test email to verify email service functionality.\n\nThis endpoint is temporary and used for testing the email service configuration.\n\nArgs:\n    request: Contains the recipient email address\n\nReturns:\n    Success/failure status of the email send operation",
        "operationId": "send_test_email_api_v1_monitoring_test_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestEmailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/email/metrics": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Email Metrics",
        "description": "Get email sending metrics for monitoring and observability.\n\nArgs:\n    hours: Number of hours to include in metrics summary\n\nReturns:\n    Email metrics summary including counters, latencies, and error breakdown",
        "operationId": "get_email_metrics_api_v1_monitoring_email_metrics_get",
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "Number of hours to include in metrics (1-168)",
              "default": 24,
              "title": "Hours"
            },
            "description": "Number of hours to include in metrics (1-168)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/email/metrics/prometheus": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Email Metrics Prometheus",
        "description": "Get email metrics in Prometheus format.\n\nReturns:\n    Prometheus-formatted metrics as plain text",
        "operationId": "get_email_metrics_prometheus_api_v1_monitoring_email_metrics_prometheus_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/email/metrics/reset": {
      "post": {
        "tags": [
          "monitoring"
        ],
        "summary": "Reset Email Metrics",
        "description": "Reset email metrics (for testing purposes).\n\nReturns:\n    Confirmation of metrics reset",
        "operationId": "reset_email_metrics_api_v1_monitoring_email_metrics_reset_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/classification/performance": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Classification Performance",
        "description": "Get classification performance summary for the last N hours.\n\nArgs:\n    hours: Number of hours to include in summary (1-168)\n\nReturns:\n    Performance metrics summary including timing, success rates, and method usage",
        "operationId": "get_classification_performance_api_v1_monitoring_classification_performance_get",
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "Number of hours to include in summary (1-168)",
              "default": 24,
              "title": "Hours"
            },
            "description": "Number of hours to include in summary (1-168)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Classification Performance Api V1 Monitoring Classification Performance Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/classification/performance/export": {
      "post": {
        "tags": [
          "monitoring"
        ],
        "summary": "Export Classification Metrics",
        "description": "Export classification metrics to a JSON file.\n\nArgs:\n    hours: Number of hours of metrics to export\n\nReturns:\n    Confirmation of export with file location",
        "operationId": "export_classification_metrics_api_v1_monitoring_classification_performance_export_post",
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "Number of hours to export",
              "default": 24,
              "title": "Hours"
            },
            "description": "Number of hours to export"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/classification/health": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Classification Health",
        "description": "Get health status of the classification service.\n\nReturns:\n    Health status including service availability and recent performance",
        "operationId": "get_classification_health_api_v1_monitoring_classification_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/classification/cache/stats": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Cache Stats",
        "description": "Get classification cache statistics.\n\nReturns:\n    Cache statistics including hit rate, size, and utilization",
        "operationId": "get_cache_stats_api_v1_monitoring_classification_cache_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/classification/cache/clear": {
      "post": {
        "tags": [
          "monitoring"
        ],
        "summary": "Clear Classification Cache",
        "description": "Clear the classification cache.\n\nReturns:\n    Confirmation of cache clearing",
        "operationId": "clear_classification_cache_api_v1_monitoring_classification_cache_clear_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/classification/cache/export": {
      "post": {
        "tags": [
          "monitoring"
        ],
        "summary": "Export Classification Cache",
        "description": "Export classification cache contents to a JSON file.\n\nReturns:\n    Confirmation of export with file location",
        "operationId": "export_classification_cache_api_v1_monitoring_classification_cache_export_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/auth/metrics": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Auth Metrics",
        "description": "Get authentication metrics for monitoring and observability.\n\nArgs:\n    hours: Number of hours to include in metrics summary\n\nReturns:\n    Authentication metrics summary including login success rates and error breakdown",
        "operationId": "get_auth_metrics_api_v1_monitoring_auth_metrics_get",
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "Number of hours to include in metrics (1-168)",
              "default": 24,
              "title": "Hours"
            },
            "description": "Number of hours to include in metrics (1-168)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/auth/metrics/prometheus": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Auth Metrics Prometheus",
        "description": "Get authentication metrics in Prometheus format.\n\nReturns:\n    Prometheus-formatted metrics as plain text",
        "operationId": "get_auth_metrics_prometheus_api_v1_monitoring_auth_metrics_prometheus_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/auth/metrics/reset": {
      "post": {
        "tags": [
          "monitoring"
        ],
        "summary": "Reset Auth Metrics",
        "description": "Reset authentication metrics (for testing purposes).\n\nReturns:\n    Confirmation of metrics reset",
        "operationId": "reset_auth_metrics_api_v1_monitoring_auth_metrics_reset_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Login",
        "description": "Authentifie un utilisateur via son nom d'utilisateur et mot de passe, et retourne un JWT.",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/signup": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Signup",
        "description": "Crée un nouveau compte utilisateur en attente de validation.",
        "operationId": "signup_api_v1_auth_signup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/forgot-password": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Forgot Password",
        "description": "Génère un token de réinitialisation et l'envoie par email (ou le log).",
        "operationId": "forgot_password_api_v1_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/reset-password": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Reset Password",
        "description": "Réinitialise le mot de passe avec un token valide.",
        "operationId": "reset_password_api_v1_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/email/webhook": {
      "post": {
        "tags": [
          "email"
        ],
        "summary": "Brevo Webhook",
        "description": "Handle Brevo webhook events for email delivery status updates.\n\nThis endpoint receives notifications from Brevo about email events\nlike deliveries, bounces, spam complaints, etc.\n\nArgs:\n    request: FastAPI request object containing the webhook payload\n    db: Database session\n    x_mailin_signature: Brevo webhook signature for verification\n\nReturns:\n    Confirmation of webhook processing",
        "operationId": "brevo_webhook_api_v1_email_webhook_post",
        "parameters": [
          {
            "name": "X-Mailin-Signature",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Mailin-Signature"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/email/status/{email_address}": {
      "get": {
        "tags": [
          "email"
        ],
        "summary": "Get Email Status",
        "description": "Get the current delivery status of an email.\n\nArgs:\n    email_address: Email address to check status for\n    message_id: Optional message ID for specific email lookup\n    db: Database session\n\nReturns:\n    Email status information",
        "operationId": "get_email_status_api_v1_email_status__email_address__get",
        "parameters": [
          {
            "name": "email_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email Address"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional message ID for specific lookup",
              "title": "Message Id"
            },
            "description": "Optional message ID for specific lookup"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/email/events/{email_address}": {
      "get": {
        "tags": [
          "email"
        ],
        "summary": "Get Email Events",
        "description": "Get recent events for an email address.\n\nArgs:\n    email_address: Email address to get events for\n    limit: Maximum number of events to return (1-100)\n    db: Database session\n\nReturns:\n    List of recent email events",
        "operationId": "get_email_events_api_v1_email_events__email_address__get",
        "parameters": [
          {
            "name": "email_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email Address"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of events to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of events to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/email/health": {
      "get": {
        "tags": [
          "email"
        ],
        "summary": "Email Service Health",
        "description": "Health check for email service components.\n\nReturns:\n    Health status of email service dependencies",
        "operationId": "email_service_health_api_v1_email_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/admin/reports/cash-sessions": {
      "get": {
        "tags": [
          "admin",
          "reports"
        ],
        "summary": "Lister les rapports de sessions de caisse",
        "description": "Return the available cash session reports for administrators.",
        "operationId": "list_cash_session_reports_api_v1_admin_reports_cash_sessions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/admin/reports/cash-sessions/{filename}": {
      "get": {
        "tags": [
          "admin",
          "reports"
        ],
        "summary": "Telecharger un rapport de session de caisse",
        "description": "Serve the requested cash session report as a CSV file.",
        "operationId": "download_cash_session_report_api_v1_admin_reports_cash_sessions__filename__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filename"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Jeton d'Acces signe",
              "title": "Token"
            },
            "description": "Jeton d'Acces signe"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/settings/settings/alert-thresholds": {
      "get": {
        "tags": [
          "admin",
          "settings",
          "admin",
          "settings"
        ],
        "summary": "Get Alert Thresholds",
        "operationId": "get_alert_thresholds_api_v1_admin_settings_settings_alert_thresholds_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "site_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Site Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertThresholdsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin",
          "settings",
          "admin",
          "settings"
        ],
        "summary": "Put Alert Thresholds",
        "operationId": "put_alert_thresholds_api_v1_admin_settings_settings_alert_thresholds_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertThresholdsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertThresholdsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/dashboard/dashboard/stats": {
      "get": {
        "tags": [
          "admin",
          "dashboard",
          "admin",
          "dashboard"
        ],
        "summary": "Get Dashboard Stats",
        "operationId": "get_dashboard_stats_api_v1_admin_dashboard_dashboard_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "site_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrer les statistiques par site",
              "title": "Site Id"
            },
            "description": "Filtrer les statistiques par site"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date de debut (ISO 8601)",
              "title": "Date From"
            },
            "description": "Date de debut (ISO 8601)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date de fin (ISO 8601)",
              "title": "Date To"
            },
            "description": "Date de fin (ISO 8601)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivityEvent": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Id"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type",
            "description": "Type d'événement (ADMINISTRATION, LOGIN, SESSION CAISSE, VENTE, DEPOT)"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description de l'événement"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date",
            "description": "Date de l'événement"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Métadonnées supplémentaires de l'événement"
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_type",
          "description",
          "date"
        ],
        "title": "ActivityEvent",
        "description": "Schéma pour un événement d'activité utilisateur"
      },
      "AdminResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "success": {
            "type": "boolean",
            "title": "Success",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "AdminResponse",
        "description": "Schéma de réponse standardisé pour les opérations d'administration"
      },
      "AdminUser": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Id"
          },
          "telegram_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Id"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "site_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Site Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "role",
          "status",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "AdminUser",
        "description": "Schéma pour les utilisateurs dans l'interface d'administration"
      },
      "AlertThresholds-Input": {
        "properties": {
          "cash_discrepancy": {
            "type": "number",
            "minimum": 0.0,
            "title": "Cash Discrepancy",
            "description": "Cash discrepancy avant alerte"
          },
          "low_inventory": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Low Inventory",
            "description": "Nombre d'articles minimum avant alerte d'inventaire"
          }
        },
        "type": "object",
        "required": [
          "cash_discrepancy",
          "low_inventory"
        ],
        "title": "AlertThresholds",
        "description": "Dashboard alert thresholds persisted server-side."
      },
      "AlertThresholds-Output": {
        "properties": {
          "cashDiscrepancy": {
            "type": "number",
            "minimum": 0.0,
            "title": "Cashdiscrepancy",
            "description": "Cash discrepancy avant alerte"
          },
          "lowInventory": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Lowinventory",
            "description": "Nombre d'articles minimum avant alerte d'inventaire"
          }
        },
        "type": "object",
        "required": [
          "cashDiscrepancy",
          "lowInventory"
        ],
        "title": "AlertThresholds",
        "description": "Dashboard alert thresholds persisted server-side."
      },
      "AlertThresholdsResponse": {
        "properties": {
          "thresholds": {
            "$ref": "#/components/schemas/AlertThresholds-Output"
          },
          "siteId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Siteid",
            "description": "Site concerne par cette configuration"
          }
        },
        "type": "object",
        "required": [
          "thresholds"
        ],
        "title": "AlertThresholdsResponse",
        "description": "Response payload for threshold retrieval."
      },
      "AlertThresholdsUpdate": {
        "properties": {
          "thresholds": {
            "$ref": "#/components/schemas/AlertThresholds-Input"
          },
          "site_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Site Id",
            "description": "Site cible pour la configuration"
          }
        },
        "type": "object",
        "required": [
          "thresholds"
        ],
        "title": "AlertThresholdsUpdate",
        "description": "Request payload for updating alert thresholds."
      },
      "AuthUser": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "telegram_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Id"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "role",
          "is_active"
        ],
        "title": "AuthUser",
        "description": "Représentation de l'utilisateur retournée après authentification."
      },
      "CashSessionClose": {
        "properties": {
          "actual_amount": {
            "type": "number",
            "minimum": 0.0,
            "title": "Actual Amount",
            "description": "Montant physique compté en caisse"
          },
          "variance_comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variance Comment",
            "description": "Commentaire obligatoire en cas d'écart"
          }
        },
        "type": "object",
        "required": [
          "actual_amount"
        ],
        "title": "CashSessionClose",
        "description": "Schéma pour la fermeture d'une session de caisse avec contrôle des montants."
      },
      "CashSessionCreate": {
        "properties": {
          "operator_id": {
            "type": "string",
            "title": "Operator Id",
            "description": "ID de l'opérateur (caissier)"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id",
            "description": "ID du site"
          },
          "initial_amount": {
            "type": "number",
            "minimum": 0.0,
            "title": "Initial Amount",
            "description": "Montant initial du fond de caisse"
          }
        },
        "type": "object",
        "required": [
          "operator_id",
          "site_id",
          "initial_amount"
        ],
        "title": "CashSessionCreate",
        "description": "Schéma pour la création d'une session de caisse."
      },
      "CashSessionListResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/CashSessionResponse"
            },
            "type": "array",
            "title": "Data",
            "description": "Liste des sessions"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Nombre total de sessions"
          },
          "skip": {
            "type": "integer",
            "title": "Skip",
            "description": "Nombre de sessions ignorées"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Limite de sessions par page"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total",
          "skip",
          "limit"
        ],
        "title": "CashSessionListResponse",
        "description": "Schéma de réponse pour la liste des sessions de caisse."
      },
      "CashSessionResponse": {
        "properties": {
          "operator_id": {
            "type": "string",
            "title": "Operator Id",
            "description": "ID de l'opérateur (caissier)"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id",
            "description": "ID du site"
          },
          "initial_amount": {
            "type": "number",
            "minimum": 0.0,
            "title": "Initial Amount",
            "description": "Montant initial du fond de caisse"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "ID unique de la session"
          },
          "current_amount": {
            "type": "number",
            "title": "Current Amount",
            "description": "Montant actuel en caisse"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CashSessionStatus"
              }
            ],
            "description": "Statut de la session"
          },
          "opened_at": {
            "type": "string",
            "format": "date-time",
            "title": "Opened At",
            "description": "Date et heure d'ouverture"
          },
          "closed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Closed At",
            "description": "Date et heure de fermeture"
          },
          "total_sales": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Sales",
            "description": "Total des ventes"
          },
          "total_items": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Items",
            "description": "Nombre total d'articles vendus"
          },
          "closing_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Closing Amount",
            "description": "Montant théorique calculé à la fermeture"
          },
          "actual_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Amount",
            "description": "Montant physique compté à la fermeture"
          },
          "variance": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variance",
            "description": "Écart entre théorique et physique"
          },
          "variance_comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variance Comment",
            "description": "Commentaire sur l'écart"
          },
          "report_download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Report Download Url",
            "description": "URL de telechargement du rapport genere"
          },
          "report_email_sent": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Report Email Sent",
            "description": "Indique si l'envoi du rapport par email a reussi"
          }
        },
        "type": "object",
        "required": [
          "operator_id",
          "site_id",
          "initial_amount",
          "id",
          "current_amount",
          "status",
          "opened_at"
        ],
        "title": "CashSessionResponse",
        "description": "Schéma de réponse pour une session de caisse."
      },
      "CashSessionStats": {
        "properties": {
          "total_sessions": {
            "type": "integer",
            "title": "Total Sessions",
            "description": "Nombre total de sessions"
          },
          "open_sessions": {
            "type": "integer",
            "title": "Open Sessions",
            "description": "Nombre de sessions ouvertes"
          },
          "closed_sessions": {
            "type": "integer",
            "title": "Closed Sessions",
            "description": "Nombre de sessions fermées"
          },
          "total_sales": {
            "type": "number",
            "title": "Total Sales",
            "description": "Total des ventes"
          },
          "total_items": {
            "type": "integer",
            "title": "Total Items",
            "description": "Total des articles vendus"
          },
          "average_session_duration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Session Duration",
            "description": "Durée moyenne des sessions en heures"
          }
        },
        "type": "object",
        "required": [
          "total_sessions",
          "open_sessions",
          "closed_sessions",
          "total_sales",
          "total_items"
        ],
        "title": "CashSessionStats",
        "description": "Schéma pour les statistiques des sessions de caisse."
      },
      "CashSessionStatus": {
        "type": "string",
        "enum": [
          "open",
          "closed"
        ],
        "title": "CashSessionStatus"
      },
      "CashSessionSummary": {
        "properties": {
          "sessionId": {
            "type": "string",
            "title": "Sessionid"
          },
          "siteId": {
            "type": "string",
            "title": "Siteid"
          },
          "operator": {
            "type": "string",
            "title": "Operator"
          },
          "openedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Openedat"
          },
          "closedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Closedat"
          },
          "initialAmount": {
            "type": "number",
            "title": "Initialamount"
          },
          "currentAmount": {
            "type": "number",
            "title": "Currentamount"
          },
          "totalSales": {
            "type": "number",
            "title": "Totalsales"
          },
          "totalItems": {
            "type": "integer",
            "title": "Totalitems"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "sessionId",
          "siteId",
          "operator",
          "openedAt",
          "initialAmount",
          "currentAmount",
          "totalSales",
          "totalItems",
          "status"
        ],
        "title": "CashSessionSummary",
        "description": "Summary information for recent cash sessions."
      },
      "CashSessionUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CashSessionStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Nouveau statut de la session"
          },
          "current_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Amount",
            "description": "Montant actuel en caisse"
          },
          "total_sales": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Sales",
            "description": "Total des ventes"
          },
          "total_items": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Items",
            "description": "Nombre total d'articles vendus"
          }
        },
        "type": "object",
        "title": "CashSessionUpdate",
        "description": "Schéma pour la mise à jour d'une session de caisse."
      },
      "DashboardMetrics": {
        "properties": {
          "totalSessions": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Totalsessions"
          },
          "openSessions": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Opensessions"
          },
          "closedSessions": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Closedsessions"
          },
          "totalSales": {
            "type": "number",
            "minimum": 0.0,
            "title": "Totalsales"
          },
          "totalItems": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Totalitems"
          },
          "averageSessionDuration": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Averagesessionduration",
            "description": "Average duration in hours"
          }
        },
        "type": "object",
        "required": [
          "totalSessions",
          "openSessions",
          "closedSessions",
          "totalSales",
          "totalItems"
        ],
        "title": "DashboardMetrics",
        "description": "Aggregated metrics displayed on the admin dashboard."
      },
      "DashboardStatsResponse": {
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/DashboardMetrics"
          },
          "encryptedMetrics": {
            "type": "string",
            "title": "Encryptedmetrics",
            "description": "Encrypted representation of the metrics payload"
          },
          "recentReports": {
            "items": {
              "$ref": "#/components/schemas/RecentReport"
            },
            "type": "array",
            "title": "Recentreports"
          },
          "recentSessions": {
            "items": {
              "$ref": "#/components/schemas/CashSessionSummary"
            },
            "type": "array",
            "title": "Recentsessions"
          }
        },
        "type": "object",
        "required": [
          "metrics",
          "encryptedMetrics"
        ],
        "title": "DashboardStatsResponse",
        "description": "Response payload for the admin dashboard statistics endpoint."
      },
      "DepositCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "site_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Site Id"
          },
          "telegram_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram User Id"
          },
          "audio_file_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio File Path"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DepositStatus"
              },
              {
                "type": "null"
              }
            ],
            "default": "pending_audio"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EEECategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "ai_classification": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Classification"
          },
          "ai_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Confidence"
          },
          "transcription": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transcription"
          },
          "eee_category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EEECategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "alternative_categories": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alternative Categories"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "DepositCreate"
      },
      "DepositCreateFromBot": {
        "properties": {
          "telegram_user_id": {
            "type": "string",
            "title": "Telegram User Id"
          },
          "audio_file_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio File Path"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DepositStatus"
              }
            ],
            "default": "pending_audio"
          }
        },
        "type": "object",
        "required": [
          "telegram_user_id"
        ],
        "title": "DepositCreateFromBot",
        "description": "Schema for creating deposits from Telegram bot"
      },
      "DepositFinalize": {
        "properties": {
          "final_category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EEECategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "correction_applied": {
            "type": "boolean",
            "title": "Correction Applied",
            "default": false
          },
          "validated": {
            "type": "boolean",
            "title": "Validated",
            "default": false
          }
        },
        "type": "object",
        "title": "DepositFinalize",
        "description": "Schema for finalizing deposits after validation/correction"
      },
      "DepositResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "site_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Site Id"
          },
          "telegram_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram User Id"
          },
          "audio_file_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio File Path"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DepositStatus"
              },
              {
                "type": "null"
              }
            ],
            "default": "pending_audio"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EEECategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "ai_classification": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Classification"
          },
          "ai_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Confidence"
          },
          "transcription": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transcription"
          },
          "eee_category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EEECategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "alternative_categories": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alternative Categories"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Deposit ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "DepositResponse"
      },
      "DepositStatus": {
        "type": "string",
        "enum": [
          "pending_audio",
          "audio_processing",
          "pending_validation",
          "classification_failed",
          "classified",
          "validated",
          "completed"
        ],
        "title": "DepositStatus"
      },
      "EEECategory": {
        "type": "string",
        "enum": [
          "small_appliance",
          "large_appliance",
          "it_equipment",
          "lighting",
          "tools",
          "toys",
          "medical_devices",
          "monitoring_control",
          "automatic_dispensers",
          "other"
        ],
        "title": "EEECategory"
      },
      "ForgotPasswordRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Adresse email de l'utilisateur"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "ForgotPasswordRequest",
        "description": "Schéma de requête pour demander la réinitialisation du mot de passe."
      },
      "ForgotPasswordResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Message de confirmation"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ForgotPasswordResponse",
        "description": "Réponse pour la demande de réinitialisation du mot de passe."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Nom d'utilisateur"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Mot de passe"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "LoginRequest",
        "description": "Schéma de requête pour la connexion via nom d'utilisateur et mot de passe."
      },
      "LoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token",
            "description": "JWT d'accès"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "description": "Type de token",
            "default": "bearer"
          },
          "user": {
            "$ref": "#/components/schemas/AuthUser"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "user"
        ],
        "title": "LoginResponse",
        "description": "Réponse d'authentification contenant le token et l'utilisateur."
      },
      "PendingUserResponse": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Id"
          },
          "telegram_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Telegram Id"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "telegram_id",
          "role",
          "status",
          "created_at"
        ],
        "title": "PendingUserResponse",
        "description": "Schéma pour la réponse des utilisateurs en attente"
      },
      "RecentReport": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "downloadUrl": {
            "type": "string",
            "title": "Downloadurl"
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Generatedat"
          },
          "sizeBytes": {
            "type": "integer",
            "title": "Sizebytes"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "downloadUrl",
          "generatedAt",
          "sizeBytes"
        ],
        "title": "RecentReport",
        "description": "Metadata about recently generated cash session reports."
      },
      "ReportEntry": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Nom du fichier de rapport"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "Taille du fichier en octets"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Horodatage de la derniere modification"
          },
          "download_url": {
            "type": "string",
            "title": "Download Url",
            "description": "URL relative pour telecharger le rapport"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "size_bytes",
          "modified_at",
          "download_url"
        ],
        "title": "ReportEntry",
        "description": "Metadata describing an available report file."
      },
      "ReportListResponse": {
        "properties": {
          "reports": {
            "items": {
              "$ref": "#/components/schemas/ReportEntry"
            },
            "type": "array",
            "title": "Reports",
            "description": "Liste des rapports disponibles"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Nombre total de rapports"
          }
        },
        "type": "object",
        "required": [
          "reports",
          "total"
        ],
        "title": "ReportListResponse",
        "description": "Response payload listing report files."
      },
      "ResetPasswordRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token",
            "description": "Token de réinitialisation"
          },
          "new_password": {
            "type": "string",
            "title": "New Password",
            "description": "Nouveau mot de passe"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "ResetPasswordRequest",
        "description": "Schéma de requête pour réinitialiser le mot de passe."
      },
      "ResetPasswordResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Message de confirmation"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ResetPasswordResponse",
        "description": "Réponse pour la réinitialisation du mot de passe."
      },
      "SaleCreate": {
        "properties": {
          "cash_session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Cash Session Id"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SaleItemCreate"
            },
            "type": "array",
            "title": "Items"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          }
        },
        "type": "object",
        "required": [
          "cash_session_id",
          "items",
          "total_amount"
        ],
        "title": "SaleCreate"
      },
      "SaleItemCreate": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          },
          "total_price": {
            "type": "number",
            "title": "Total Price"
          }
        },
        "type": "object",
        "required": [
          "category",
          "quantity",
          "unit_price",
          "total_price"
        ],
        "title": "SaleItemCreate"
      },
      "SaleItemResponse": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          },
          "total_price": {
            "type": "number",
            "title": "Total Price"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "sale_id": {
            "type": "string",
            "title": "Sale Id"
          }
        },
        "type": "object",
        "required": [
          "category",
          "quantity",
          "unit_price",
          "total_price",
          "id",
          "sale_id"
        ],
        "title": "SaleItemResponse"
      },
      "SaleResponse": {
        "properties": {
          "cash_session_id": {
            "type": "string",
            "title": "Cash Session Id"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SaleItemResponse"
            },
            "type": "array",
            "title": "Items",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "cash_session_id",
          "total_amount",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "SaleResponse"
      },
      "SignupRequest": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "title": "Username",
            "description": "Nom d'utilisateur"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "title": "Password",
            "description": "Mot de passe"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Adresse email (optionnelle)"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "SignupRequest",
        "description": "Schéma de requête pour l'inscription d'un nouvel utilisateur."
      },
      "SignupResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Message de confirmation"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "ID de l'utilisateur créé"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Statut du compte"
          }
        },
        "type": "object",
        "required": [
          "message",
          "user_id",
          "status"
        ],
        "title": "SignupResponse",
        "description": "Réponse d'inscription d'un nouvel utilisateur."
      },
      "SiteCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "configuration": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "SiteCreate"
      },
      "SiteResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "configuration": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "SiteResponse"
      },
      "TestEmailRequest": {
        "properties": {
          "to_email": {
            "type": "string",
            "format": "email",
            "title": "To Email"
          }
        },
        "type": "object",
        "required": [
          "to_email"
        ],
        "title": "TestEmailRequest"
      },
      "UserApprovalRequest": {
        "properties": {
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Message personnalisé pour l'utilisateur"
          }
        },
        "type": "object",
        "title": "UserApprovalRequest",
        "description": "Schéma pour l'approbation d'un utilisateur"
      },
      "UserCreate": {
        "properties": {
          "telegram_id": {
            "type": "string",
            "title": "Telegram Id"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ],
            "default": "user"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserStatus"
              }
            ],
            "default": "pending"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "site_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Site Id"
          }
        },
        "type": "object",
        "required": [
          "telegram_id"
        ],
        "title": "UserCreate"
      },
      "UserHistoryResponse": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "User Id"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/ActivityEvent"
            },
            "type": "array",
            "title": "Events"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Nombre total d'événements"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page",
            "description": "Page actuelle"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Nombre d'éléments par page"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Y a-t-il une page suivante"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Y a-t-il une page précédente"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "events",
          "total_count",
          "page",
          "limit",
          "has_next",
          "has_prev"
        ],
        "title": "UserHistoryResponse",
        "description": "Schéma pour la réponse de l'historique utilisateur"
      },
      "UserProfileUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Prénom de l'utilisateur"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Nom de famille de l'utilisateur"
          }
        },
        "type": "object",
        "title": "UserProfileUpdate",
        "description": "Schéma pour la mise à jour du profil utilisateur"
      },
      "UserRejectionRequest": {
        "properties": {
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Raison du rejet"
          }
        },
        "type": "object",
        "title": "UserRejectionRequest",
        "description": "Schéma pour le rejet d'un utilisateur"
      },
      "UserResponse": {
        "properties": {
          "telegram_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Id"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ],
            "default": "user"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserStatus"
              }
            ],
            "default": "pending"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "site_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Site Id"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "UserResponse"
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "super-admin",
          "admin",
          "manager",
          "cashier",
          "user"
        ],
        "title": "UserRole"
      },
      "UserRoleUpdate": {
        "properties": {
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ],
            "description": "Nouveau rôle à assigner à l'utilisateur"
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "UserRoleUpdate",
        "description": "Schéma pour la modification du rôle d'un utilisateur"
      },
      "UserStatus": {
        "type": "string",
        "enum": [
          "pending",
          "approved",
          "rejected",
          "active"
        ],
        "title": "UserStatus"
      },
      "UserUpdate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "site_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Site Id"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "recyclic_api__schemas__admin__UserStatusUpdate": {
        "properties": {
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Nouveau statut actif de l'utilisateur"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Raison du changement de statut"
          }
        },
        "type": "object",
        "required": [
          "is_active"
        ],
        "title": "UserStatusUpdate",
        "description": "Schéma pour la modification du statut is_active d'un utilisateur"
      },
      "recyclic_api__schemas__user__UserStatusUpdate": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "UserStatusUpdate"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}