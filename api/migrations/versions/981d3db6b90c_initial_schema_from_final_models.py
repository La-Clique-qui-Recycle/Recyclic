"""Initial schema from final models

Revision ID: 981d3db6b90c
Revises: 
Create Date: 2025-10-21 17:02:02.935012

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '981d3db6b90c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_table')
    op.drop_index('idx_audit_logs_action_type', table_name='audit_logs')
    op.drop_index('idx_audit_logs_actor_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_actor_username', table_name='audit_logs')
    op.drop_index('idx_audit_logs_target_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_target_type', table_name='audit_logs')
    op.drop_index('idx_audit_logs_timestamp', table_name='audit_logs')
    op.create_index(op.f('ix_audit_logs_action_type'), 'audit_logs', ['action_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_actor_id'), 'audit_logs', ['actor_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_actor_username'), 'audit_logs', ['actor_username'], unique=False)
    op.create_index(op.f('ix_audit_logs_target_id'), 'audit_logs', ['target_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_target_type'), 'audit_logs', ['target_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.drop_column('audit_logs', 'created_at')
    op.alter_column('categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('categories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('groups_name_key', 'groups', type_='unique')
    op.drop_index('ix_groups_name', table_name='groups')
    op.create_index(op.f('ix_groups_name'), 'groups', ['name'], unique=True)
    op.alter_column('ligne_depot', 'category_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint('permissions_name_key', 'permissions', type_='unique')
    op.drop_index('ix_permissions_name', table_name='permissions')
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=True)
    op.alter_column('sales', 'payment_method',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('CASH', 'CARD', 'CHECK', name='payment_method', native_enum=False),
               existing_nullable=True,
               existing_server_default=sa.text("'cash'::character varying"))
    op.drop_constraint('settings_key_key', 'settings', type_='unique')
    op.drop_index('ix_settings_key', table_name='settings')
    op.create_index(op.f('ix_settings_key'), 'settings', ['key'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_settings_key'), table_name='settings')
    op.create_index('ix_settings_key', 'settings', ['key'], unique=False)
    op.create_unique_constraint('settings_key_key', 'settings', ['key'])
    op.alter_column('sales', 'payment_method',
               existing_type=sa.Enum('CASH', 'CARD', 'CHECK', name='payment_method', native_enum=False),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'cash'::character varying"))
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.create_index('ix_permissions_name', 'permissions', ['name'], unique=False)
    op.create_unique_constraint('permissions_name_key', 'permissions', ['name'])
    op.alter_column('ligne_depot', 'category_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_index(op.f('ix_groups_name'), table_name='groups')
    op.create_index('ix_groups_name', 'groups', ['name'], unique=False)
    op.create_unique_constraint('groups_name_key', 'groups', ['name'])
    op.alter_column('categories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.add_column('audit_logs', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_target_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_target_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_actor_username'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_actor_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action_type'), table_name='audit_logs')
    op.create_index('idx_audit_logs_timestamp', 'audit_logs', ['timestamp'], unique=False)
    op.create_index('idx_audit_logs_target_type', 'audit_logs', ['target_type'], unique=False)
    op.create_index('idx_audit_logs_target_id', 'audit_logs', ['target_id'], unique=False)
    op.create_index('idx_audit_logs_actor_username', 'audit_logs', ['actor_username'], unique=False)
    op.create_index('idx_audit_logs_actor_id', 'audit_logs', ['actor_id'], unique=False)
    op.create_index('idx_audit_logs_action_type', 'audit_logs', ['action_type'], unique=False)
    op.create_table('test_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('active', 'inactive', name='test_status'), server_default=sa.text("'active'::test_status"), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='test_table_pkey')
    )
    # ### end Alembic commands ###
