"""initial_schema

Revision ID: c1891768c506
Revises: 
Create Date: 2025-09-23 02:39:58.463543

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c1891768c506'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('login_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('client_ip', sa.String(), nullable=True),
    sa.Column('error_type', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_login_history_created_at'), 'login_history', ['created_at'], unique=False)
    op.create_index(op.f('ix_login_history_success'), 'login_history', ['success'], unique=False)
    op.create_index(op.f('ix_login_history_user_id'), 'login_history', ['user_id'], unique=False)
    op.create_index(op.f('ix_login_history_username'), 'login_history', ['username'], unique=False)
    op.create_table('sites',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('configuration', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sync_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sync_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('error_details', sa.Text(), nullable=True),
    sa.Column('records_count', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('telegram_id', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('super-admin', 'admin', 'manager', 'cashier', 'user', name='userrole'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', 'active', name='userstatus'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('site_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('admin_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('site_id', sa.UUID(), nullable=True),
    sa.Column('value_encrypted', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key', 'site_id', name='uq_admin_settings_key_site')
    )
    op.create_table('cash_registers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('site_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cash_registers_name'), 'cash_registers', ['name'], unique=False)
    op.create_table('deposits',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('site_id', sa.UUID(), nullable=True),
    sa.Column('telegram_user_id', sa.String(), nullable=True),
    sa.Column('audio_file_path', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('PENDING_AUDIO', 'AUDIO_PROCESSING', 'PENDING_VALIDATION', 'CLASSIFICATION_FAILED', 'CLASSIFIED', 'VALIDATED', 'COMPLETED', name='depositstatus'), nullable=False),
    sa.Column('category', sa.Enum('SMALL_APPLIANCE', 'LARGE_APPLIANCE', 'IT_EQUIPMENT', 'LIGHTING', 'TOOLS', 'TOYS', 'MEDICAL_DEVICES', 'MONITORING_CONTROL', 'AUTOMATIC_DISPENSERS', 'OTHER', name='eeecategory'), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('transcription', sa.Text(), nullable=True),
    sa.Column('eee_category', sa.Enum('SMALL_APPLIANCE', 'LARGE_APPLIANCE', 'IT_EQUIPMENT', 'LIGHTING', 'TOOLS', 'TOYS', 'MEDICAL_DEVICES', 'MONITORING_CONTROL', 'AUTOMATIC_DISPENSERS', 'OTHER', name='eeecategory'), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('alternative_categories', sa.JSON(), nullable=True),
    sa.Column('ai_classification', sa.String(), nullable=True),
    sa.Column('ai_confidence', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('registration_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('telegram_id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('site_id', sa.UUID(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='registrationstatus'), nullable=False),
    sa.Column('reviewed_by', sa.UUID(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_registration_requests_telegram_id'), 'registration_requests', ['telegram_id'], unique=False)
    op.create_table('user_status_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('changed_by_admin_id', sa.UUID(), nullable=False),
    sa.Column('old_status', sa.Boolean(), nullable=True),
    sa.Column('new_status', sa.Boolean(), nullable=False),
    sa.Column('change_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_status_history_changed_by_admin_id'), 'user_status_history', ['changed_by_admin_id'], unique=False)
    op.create_index(op.f('ix_user_status_history_user_id'), 'user_status_history', ['user_id'], unique=False)
    op.create_table('cash_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('operator_id', sa.UUID(), nullable=False),
    sa.Column('site_id', sa.UUID(), nullable=False),
    sa.Column('register_id', sa.UUID(), nullable=True),
    sa.Column('initial_amount', sa.Float(), nullable=False),
    sa.Column('current_amount', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'CLOSED', name='cashsessionstatus'), nullable=False),
    sa.Column('opened_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_sales', sa.Float(), nullable=True),
    sa.Column('total_items', sa.Integer(), nullable=True),
    sa.Column('closing_amount', sa.Float(), nullable=True, comment='Montant théorique calculé à la fermeture'),
    sa.Column('actual_amount', sa.Float(), nullable=True, comment='Montant physique compté à la fermeture'),
    sa.Column('variance', sa.Float(), nullable=True, comment='Écart entre théorique et physique'),
    sa.Column('variance_comment', sa.String(), nullable=True, comment="Commentaire sur l'écart"),
    sa.ForeignKeyConstraint(['operator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['register_id'], ['cash_registers.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cash_session_id', sa.UUID(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['cash_session_id'], ['cash_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sale_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sale_id', sa.UUID(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sale_items')
    op.drop_table('sales')
    op.drop_table('cash_sessions')
    op.drop_index(op.f('ix_user_status_history_user_id'), table_name='user_status_history')
    op.drop_index(op.f('ix_user_status_history_changed_by_admin_id'), table_name='user_status_history')
    op.drop_table('user_status_history')
    op.drop_index(op.f('ix_registration_requests_telegram_id'), table_name='registration_requests')
    op.drop_table('registration_requests')
    op.drop_table('deposits')
    op.drop_index(op.f('ix_cash_registers_name'), table_name='cash_registers')
    op.drop_table('cash_registers')
    op.drop_table('admin_settings')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('sync_logs')
    op.drop_table('sites')
    op.drop_index(op.f('ix_login_history_username'), table_name='login_history')
    op.drop_index(op.f('ix_login_history_user_id'), table_name='login_history')
    op.drop_index(op.f('ix_login_history_success'), table_name='login_history')
    op.drop_index(op.f('ix_login_history_created_at'), table_name='login_history')
    op.drop_table('login_history')
    # ### end Alembic commands ###
