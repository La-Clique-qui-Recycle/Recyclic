services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: recyclic
      POSTGRES_USER: recyclic
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U recyclic"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - recyclic-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - recyclic-network

  api:
    build: ./api
    environment:
      DATABASE_URL: postgresql://recyclic:${POSTGRES_PASSWORD}@postgres:5432/recyclic
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY}
      ENVIRONMENT: development
    ports:
      - "4433:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - recyclic-network

  bot:
    build: ./bot
    environment:
      DATABASE_URL: postgresql://recyclic:${POSTGRES_PASSWORD}@postgres:5432/recyclic
      REDIS_URL: redis://redis:6379
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      API_BASE_URL: http://api:8000
      FRONTEND_URL: http://localhost:4444
      ADMIN_TELEGRAM_IDS: ${ADMIN_TELEGRAM_IDS}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - recyclic-network

  bot-webhook:
    build: ./bot
    command: python -m bot.src.main webhook
    environment:
      DATABASE_URL: postgresql://recyclic:${POSTGRES_PASSWORD}@postgres:5432/recyclic
      REDIS_URL: redis://redis:6379
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      API_BASE_URL: http://api:8000
      FRONTEND_URL: http://localhost:4444
      ADMIN_TELEGRAM_IDS: ${ADMIN_TELEGRAM_IDS}
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - recyclic-network

  frontend:
    build: ./frontend
    environment:
      REACT_APP_API_URL: http://localhost:4433
    ports:
      - "4444:3000"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - recyclic-network

volumes:
  postgres_data:

networks:
  recyclic-network:
    driver: bridge
